trigger:
  tags:
    include: [ 'cqrs-v*', 'cqrs-demo-v*' ]

pool: Default

resources:
  repositories:
    - repository: templates
      type: git
      name: DevShared/Templates

variables:
  - group: Nuget
  - name: buildConfiguration
    value: 'Release'
  - name: project.Cqrs
    value: 'Kros.CqrsTemplate'
  - name: project.CqrsDemo
    value: 'Kros.CqrsDemoTemplate'
  - name: 'project.Current'
    value: 'Kros.CqrsTemplate'

steps:
- powershell: echo '$(project.Current)'
  # - powershell: echo '##vso[task.setvariable variable=project.Current]$(project.Cqrs)'
  #   displayName: 'Set project: $(project.Cqrs)'
  #   condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/cqrs-v')

  # - powershell: echo '##vso[task.setvariable variable=project.Current]$(project.CqrsDemo)'
  #   displayName: 'Set project: $(project.CqrsDemo)'
  #   condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/cqrs-demo-v')

  - script: |
      echo No project was specified.
      echo Build must be triggered with correct tag and based on the tag name, the project is selected.
      echo Available tag names and their projects:
      echo   - cqrs-v* - Kros.CqrsDemo
      echo   - cqrs-demo-v* - Kros.CqrsDemoTemplate
      exit 1
    displayName: 'Check project name'
    condition: eq(variables['project.Current'], '')

  - task: DotNetCoreCLI@2
    displayName: 'Nuget restore'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: build
      projects: '**/$(project.current).csproj'
      arguments: '--configuration $(BuildConfiguration) --no-restore'

  - task: NuGetCommand@2
    inputs:
      command: 'pack'
      searchPatternPack: '**/$(project.current)*.nupkg'  

  - task: CopyFiles@2
    displayName: 'Copy package files to staging directory'
    inputs:
      Contents: '**/$(project.current)*.nupkg'
      TargetFolder: '$(build.artifactStagingDirectory)'
      FlattenFolders: true

  - template: steps/nuget-push.yml@templates
    parameters:
      feed: '$(nuget.feed)'
      packages: '$(Build.ArtifactStagingDirectory)/$(project.Current)*.nupkg'
